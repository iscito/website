"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[757],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),h=r,b=m["".concat(s,".").concat(h)]||m[h]||u[h]||o;return n?a.createElement(b,i(i({ref:t},p),{},{components:n})):a.createElement(b,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5248:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={slug:"PLC4X OPCUA Server",title:"PLC4X OPCUA Server",authors:"hutcheb",tags:["plc4x","opcua","modbus","s7","ads","eip"]},i=void 0,l={permalink:"/blog/PLC4X OPCUA Server",editUrl:"https://github.com/iscito/website/tree/main/blog/2022-09-12-plc4x-opcua/2022-09-12-plc4x-opcua.md",source:"@site/blog/2022-09-12-plc4x-opcua/2022-09-12-plc4x-opcua.md",title:"PLC4X OPCUA Server",description:"The PLC4X OPC-UA Server is an integration with the PLC4X",date:"2022-09-12T00:00:00.000Z",formattedDate:"September 12, 2022",tags:[{label:"plc4x",permalink:"/blog/tags/plc-4-x"},{label:"opcua",permalink:"/blog/tags/opcua"},{label:"modbus",permalink:"/blog/tags/modbus"},{label:"s7",permalink:"/blog/tags/s-7"},{label:"ads",permalink:"/blog/tags/ads"},{label:"eip",permalink:"/blog/tags/eip"}],readingTime:2.73,hasTruncateMarker:!1,authors:[{name:"Ben Hutcheson",title:"Maintainer of iscito",url:"https://github.com/hutcheb",imageURL:"https://github.com/hutcheb.png",key:"hutcheb"}],frontMatter:{slug:"PLC4X OPCUA Server",title:"PLC4X OPCUA Server",authors:"hutcheb",tags:["plc4x","opcua","modbus","s7","ads","eip"]},nextItem:{title:"PLC4X Kafka Integration",permalink:"/blog/PLC4X Kafka Integration"}},s={authorsImageUrls:[void 0]},c=[],p={toc:c};function u(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The PLC4X OPC-UA Server is an integration with the PLC4X\nstack which allows for communication via a number of industrial\nprotocols, and the Eclipse Milo OPC-UA server stack.\nThis allows you to make available via OPC-UA time series data points\nusing any of these protocols:-"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Modbus"),(0,r.kt)("li",{parentName:"ul"},"Ethernet/IP (Including Rockwell)"),(0,r.kt)("li",{parentName:"ul"},"ADS (Beckhoff)"),(0,r.kt)("li",{parentName:"ul"},"S7 (Siemens)"),(0,r.kt)("li",{parentName:"ul"},"OPCUA"),(0,r.kt)("li",{parentName:"ul"},"BACNET (Building Automation)"),(0,r.kt)("li",{parentName:"ul"},"Clipsal C-Bus"),(0,r.kt)("li",{parentName:"ul"},"CANOpen"),(0,r.kt)("li",{parentName:"ul"},"KNX (Building Automation)"),(0,r.kt)("li",{parentName:"ul"},"PROFINET (In Development)"),(0,r.kt)("li",{parentName:"ul"},"and a simulation device.")),(0,r.kt)("p",null,"PLC4X is an industrial communication open source package. It has implementations in\nJava, Go and C (Java is the most complete, followed by Go and C). The OPC-UA server\nuses the Java version. "),(0,r.kt)("p",null,"OPC-UA is the next iteration of OPC and has a number of benefits. For me the major\npoints to migrate away from OPC are:-"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"OPC is based on old technology (DCOM/RPC) which is being phased out by Microsoft."),(0,r.kt)("li",{parentName:"ul"},"DCOM has always been difficult to configure to allow remote communication."),(0,r.kt)("li",{parentName:"ul"},"OPC is primarily a Microsoft Windows technology."),(0,r.kt)("li",{parentName:"ul"},"OPC uses any number and random TCP ports making it hard to configure inter-network\ncommunication.")),(0,r.kt)("p",null,"OPC-UA has been around for a number of years now and is increasing making it's way into\nthe industrial market. Most SCADA packages now support OPC-UA."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"OPC-UA uses only one TCP port, which makes firewall configuration simple."),(0,r.kt)("li",{parentName:"ul"},"It can be run on linux systems allowing for smaller footprint servers. An example would\nbe running the PLC4X OPC-UA server on a docker image."),(0,r.kt)("li",{parentName:"ul"},"It seems to have a larger code base in the open source community."),(0,r.kt)("li",{parentName:"ul"},"As opposed to OPC, OPCUA stacks can be run on the same device as the PLC. Allowing for PLCs\nto support OPCUA natively (Siemens S7-1500).")),(0,r.kt)("p",null,"The Eclipse Milo OPC-UA stack is an open source stack maintained primarily by Kevin Herron. I believe it is\nthe OPC-UA stack that the Ignition SCADA package is based on."),(0,r.kt)("p",null,"To run the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/plc4x"},"PLC4X server"),", copy the config file from src/main/resources/config.yml and modify it as below.\nYou'll need to build the server from with the plc4j/integrations/opcua-server directory."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"mvn install")),(0,r.kt)("p",null,"run the executable:-"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"   java -jar target/plc4x-opcua-server-0.10.0-SNAPSHOT-uber-jar.jar -c config.yml -i")),(0,r.kt)("p",null,"Once the initial configuration is done via the -i switch, the service can then\nbe run without interaction. This allows it to be run in terminal, wrapped in a service wrapper, GUI link or docker image;\nhowever you wish."),(0,r.kt)("p",null,"An example config file is located in the PLC4X OPC Server Integrations folder."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"PLC4X Config file",src:n(6838).Z,width:"562",height:"404"})),(0,r.kt)("p",null,"A directory to store the certificates needs to be specified.\nThe connection string syntax can be found at ",(0,r.kt)("a",{parentName:"p",href:"https://plc4x.apache.org"},"PLC4X Protocol Syntax"),",\nwhich varies depending on the protocol and parameters available."),(0,r.kt)("p",null,"Once the server is running it can be connected to using the endpoint url "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"  opc.tcp://localhost:53530/plc4x")),(0,r.kt)("p",null,"The hostname can be any resolvable name for the host. In this example I have used the\nUA Expert Client, but any client can be used including the PLC4X OPC UA client."),(0,r.kt)("p",null,"Once connected you're able to browse and subscribe to the available tags."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Tag Browsing",src:n(5656).Z,width:"263",height:"207"})),(0,r.kt)("p",null,"The next steps are to continue the great work that Chris has put into the discovery and browse api's. Integrating this\ninto the OPC-UA server should allow for the automatic population of the device's and addresses."))}u.isMDXComponent=!0},5656:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/2022-09-12 10-31-45-9da60201d2186ae2943ae26cea7cf70b.png"},6838:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/2022-09-12 10-46-02-7f0bd6c8ec42801b5e6cc328d51eab2d.png"}}]);